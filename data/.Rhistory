gg <- gg + geom_text(data=df, color="#edae52", size=2.75, vjust=2.5, family="Calibri",
aes(x=ages_18_to_34, y=country, label=percent_first(ages_18_to_34)))
gg
gg <- gg + geom_rect(data=df, aes(xmin=1.05, xmax=1.175, ymin=-Inf, ymax=Inf), fill="#efefe3")
gg <- gg + geom_text(data=df, aes(label=diff, y=country, x=1.1125), fontface="bold", size=3, family="Calibri")
gg <- gg + geom_text(data=filter(df, country=="Germany"), aes(x=1.1125, y=country, label="DIFF"),
color="#7a7d7e", size=3.1, vjust=-2, fontface="bold", family="Calibri")
gg <- gg + scale_x_continuous(expand=c(0,0), limits=c(0, 1.175))
gg <- gg + scale_y_discrete(expand=c(0.075,0))
gg <- gg + labs(x=NULL, y=NULL, title="The social media age gap",
subtitle="Adult internet users or reported smartphone owners who\nuse social networking sites",
caption="Source: Pew Research Center, Spring 2015 Global Attitudes Survey. Q74")
gg
gg <- gg + theme_bw(base_family="Calibri")
gg <- gg + theme(panel.grid.major=element_blank())
gg <- gg + theme(panel.grid.minor=element_blank())
gg <- gg + theme(panel.border=element_blank())
gg <- gg + theme(axis.ticks=element_blank())
gg <- gg + theme(axis.text.x=element_blank())
gg <- gg + theme(plot.title=element_text(face="bold"))
gg <- gg + theme(plot.subtitle=element_text(face="italic", size=9, margin=margin(b=12)))
gg <- gg + theme(plot.caption=element_text(size=7, margin=margin(t=12), color="#7a7d7e"))
gg
gg <- ggplot()
# doing this vs y axis major grid line
gg <- gg + geom_segment(data=df, aes(y=country, yend=country, x=0, xend=1), color="#b2b2b2", size=0.15)
# dum…dum…dum!bell
gg <- gg + geom_dumbbell(data=df, aes(y=country, x=ages_35, xend=ages_18_to_34),
size=1.5, color="#b2b2b2", point.size.l=3, point.size.r=3,
point.colour.l="#9fb059", point.colour.r="#edae52")
# text below points
gg <- gg + geom_text(data=filter(df, country=="Germany"),
aes(x=ages_35, y=country, label="Ages 35+"),
color="#9fb059", size=3, vjust=-2, fontface="bold", family="Calibri")
gg <- gg + geom_text(data=filter(df, country=="Germany"),
aes(x=ages_18_to_34, y=country, label="Ages 18-34"),
color="#edae52", size=3, vjust=-2, fontface="bold", family="Calibri")
# text above points
gg <- gg + geom_text(data=df, aes(x=ages_35, y=country, label=percent_first(ages_35)),
color="#9fb059", size=2.75, vjust=2.5, family="Calibri")
gg <- gg + geom_text(data=df, color="#edae52", size=2.75, vjust=2.5, family="Calibri",
aes(x=ages_18_to_34, y=country, label=percent_first(ages_18_to_34)))
# difference column
gg <- gg + geom_rect(data=df, aes(xmin=1.05, xmax=1.175, ymin=-Inf, ymax=Inf), fill="#efefe3")
gg <- gg + geom_text(data=df, aes(label=diff, y=country, x=1.1125), fontface="bold", size=3, family="Calibri")
gg <- gg + geom_text(data=filter(df, country=="Germany"), aes(x=1.1125, y=country, label="DIFF"),
color="#7a7d7e", size=3.1, vjust=-2, fontface="bold", family="Calibri")
gg <- gg + scale_x_continuous(expand=c(0,0), limits=c(0, 1.175))
gg <- gg + scale_y_discrete(expand=c(0.075,0))
gg <- gg + labs(x=NULL, y=NULL, title="The social media age gap",
subtitle="Adult internet users or reported smartphone owners who\nuse social networking sites",
caption="Source: Pew Research Center, Spring 2015 Global Attitudes Survey. Q74")
gg <- gg + theme_bw(base_family="Calibri")
gg
gg <- ggplot()
# doing this vs y axis major grid line
gg <- gg + geom_segment(data=df, aes(y=country, yend=country, x=0, xend=1), color="#b2b2b2", size=0.15)
# dum…dum…dum!bell
gg <- gg + geom_dumbbell(data=df, aes(y=country, x=ages_35, xend=ages_18_to_34),
size=1.5, color="#b2b2b2", point.size.l=3, point.size.r=3,
point.colour.l="#9fb059", point.colour.r="#edae52")
# text below points
gg <- gg + geom_text(data=filter(df, country=="Germany"),
aes(x=ages_35, y=country, label="Ages 35+"),
color="#9fb059", size=3, vjust=-2, fontface="bold", family="Calibri")
gg <- gg + geom_text(data=filter(df, country=="Germany"),
aes(x=ages_18_to_34, y=country, label="Ages 18-34"),
color="#edae52", size=3, vjust=-2, fontface="bold", family="Calibri")
# text above points
gg <- gg + geom_text(data=df, aes(x=ages_35, y=country, label=percent_first(ages_35)),
color="#9fb059", size=2.75, vjust=2.5, family="Calibri")
gg <- gg + geom_text(data=df, color="#edae52", size=2.75, vjust=2.5, family="Calibri",
aes(x=ages_18_to_34, y=country, label=percent_first(ages_18_to_34)))
# difference column
gg <- gg + geom_rect(data=df, aes(xmin=1.05, xmax=1.175, ymin=-Inf, ymax=Inf), fill="#efefe3")
gg <- gg + geom_text(data=df, aes(label=diff, y=country, x=1.1125), fontface="bold", size=3, family="Calibri")
gg <- gg + geom_text(data=filter(df, country=="Germany"), aes(x=1.1125, y=country, label="DIFF"),
color="#7a7d7e", size=3.1, vjust=-2, fontface="bold", family="Calibri")
gg <- gg + scale_x_continuous(expand=c(0,0), limits=c(0, 1.175))
gg <- gg + scale_y_discrete(expand=c(0.075,0))
gg <- gg + labs(x=NULL, y=NULL, title="The social media age gap",
subtitle="Adult internet users or reported smartphone owners who\nuse social networking sites",
caption="Source: Pew Research Center, Spring 2015 Global Attitudes Survey. Q74")
gg <- gg + theme(panel.grid.major=element_blank())
gg <- gg + theme(panel.grid.minor=element_blank())
gg <- gg + theme(panel.border=element_blank())
gg <- gg + theme(axis.ticks=element_blank())
gg <- gg + theme(axis.text.x=element_blank())
gg <- gg + theme(plot.title=element_text(face="bold"))
gg <- gg + theme(plot.subtitle=element_text(face="italic", size=9, margin=margin(b=12)))
gg <- gg + theme(plot.caption=element_text(size=7, margin=margin(t=12), color="#7a7d7e"))
gg
install.packages("extrafont")
install.packages("extrafont")
library(extrafont)
font_import()
source('~/.active-rstudio-document', echo=TRUE)
library(ggplot2) # devtools::install_github("hadley/ggplot2")
library(ggalt)   # devtools::install_github("hrbrmstr/ggalt")
library(dplyr)   # for data_frame() & arrange()
# I'm not crazy enough to input all the data; this will have to do for the example
df <- data_frame(country=c("Germany", "France", "Vietnam", "Japan", "Poland", "Lebanon",
"Australia", "South\nKorea", "Canada", "Spain", "Italy", "Peru",
"U.S.", "UK", "Mexico", "Chile", "China", "India"),
ages_35=c(0.39, 0.42, 0.49, 0.43, 0.51, 0.57,
0.60, 0.45, 0.65, 0.57, 0.57, 0.65,
0.63, 0.59, 0.67, 0.75, 0.52, 0.48),
ages_18_to_34=c(0.81, 0.83, 0.86, 0.78, 0.86, 0.90,
0.91, 0.75, 0.93, 0.85, 0.83, 0.91,
0.89, 0.84, 0.90, 0.96, 0.73, 0.69),
diff=sprintf("+%d", as.integer((ages_18_to_34-ages_35)*100)))
# we want to keep the order in the plot, so we use a factor for country
df <- arrange(df, desc(diff))
df$country <- factor(df$country, levels=rev(df$country))
# we only want the first line values with "%" symbols (to avoid chart junk)
# quick hack; there is a more efficient way to do this
percent_first <- function(x) {
x <- sprintf("%d%%", round(x*100))
x[2:length(x)] <- sub("%$", "", x[2:length(x)])
x
}
gg <- ggplot()
# doing this vs y axis major grid line
gg <- gg + geom_segment(data=df, aes(y=country, yend=country, x=0, xend=1), color="#b2b2b2", size=0.15)
# dum…dum…dum!bell
gg <- gg + geom_dumbbell(data=df, aes(y=country, x=ages_35, xend=ages_18_to_34),
size=1.5, color="#b2b2b2", point.size.l=3, point.size.r=3,
point.colour.l="#9fb059", point.colour.r="#edae52")
# text below points
gg <- gg + geom_text(data=filter(df, country=="Germany"),
aes(x=ages_35, y=country, label="Ages 35+"),
color="#9fb059", size=3, vjust=-2, fontface="bold", family="Calibri")
gg <- gg + geom_text(data=filter(df, country=="Germany"),
aes(x=ages_18_to_34, y=country, label="Ages 18-34"),
color="#edae52", size=3, vjust=-2, fontface="bold", family="Calibri")
# text above points
gg <- gg + geom_text(data=df, aes(x=ages_35, y=country, label=percent_first(ages_35)),
color="#9fb059", size=2.75, vjust=2.5, family="Calibri")
gg <- gg + geom_text(data=df, color="#edae52", size=2.75, vjust=2.5, family="Calibri",
aes(x=ages_18_to_34, y=country, label=percent_first(ages_18_to_34)))
# difference column
gg <- gg + geom_rect(data=df, aes(xmin=1.05, xmax=1.175, ymin=-Inf, ymax=Inf), fill="#efefe3")
gg <- gg + geom_text(data=df, aes(label=diff, y=country, x=1.1125), fontface="bold", size=3, family="Calibri")
gg <- gg + geom_text(data=filter(df, country=="Germany"), aes(x=1.1125, y=country, label="DIFF"),
color="#7a7d7e", size=3.1, vjust=-2, fontface="bold", family="Calibri")
gg <- gg + scale_x_continuous(expand=c(0,0), limits=c(0, 1.175))
gg <- gg + scale_y_discrete(expand=c(0.075,0))
gg <- gg + labs(x=NULL, y=NULL, title="The social media age gap",
subtitle="Adult internet users or reported smartphone owners who\nuse social networking sites",
caption="Source: Pew Research Center, Spring 2015 Global Attitudes Survey. Q74")
gg <- gg + theme_bw(base_family="Calibri")
gg <- gg + theme(panel.grid.major=element_blank())
gg <- gg + theme(panel.grid.minor=element_blank())
gg <- gg + theme(panel.border=element_blank())
gg <- gg + theme(axis.ticks=element_blank())
gg <- gg + theme(axis.text.x=element_blank())
gg <- gg + theme(plot.title=element_text(face="bold"))
gg <- gg + theme(plot.subtitle=element_text(face="italic", size=9, margin=margin(b=12)))
gg <- gg + theme(plot.caption=element_text(size=7, margin=margin(t=12), color="#7a7d7e"))
gg
# doing this vs y axis major grid line
gg <- gg + geom_segment(data=df, aes(y=country, yend=country, x=0, xend=1), color="#b2b2b2", size=0.15)
# dum…dum…dum!bell
gg <- gg + geom_dumbbell(data=df, aes(y=country, x=ages_35, xend=ages_18_to_34),
size=1.5, color="#b2b2b2", point.size.l=3, point.size.r=3,
point.colour.l="#9fb059", point.colour.r="#edae52")
# text below points
gg <- gg + geom_text(data=filter(df, country=="Germany"),
aes(x=ages_35, y=country, label="Ages 35+"),
color="#9fb059", size=3, vjust=-2, fontface="bold", family="Calibri")
gg <- gg + geom_text(data=filter(df, country=="Germany"),
aes(x=ages_18_to_34, y=country, label="Ages 18-34"),
color="#edae52", size=3, vjust=-2, fontface="bold", family="Calibri")
# text above points
gg <- gg + geom_text(data=df, aes(x=ages_35, y=country, label=percent_first(ages_35)),
color="#9fb059", size=2.75, vjust=2.5, family="Calibri")
gg
gg <- ggplot()
# doing this vs y axis major grid line
gg <- gg + geom_segment(data=df, aes(y=country, yend=country, x=0, xend=1), color="#b2b2b2", size=0.15)
# dum…dum…dum!bell
gg <- gg + geom_dumbbell(data=df, aes(y=country, x=ages_35, xend=ages_18_to_34),
size=1.5, color="#b2b2b2", point.size.l=3, point.size.r=3,
point.colour.l="#9fb059", point.colour.r="#edae52")
# text below points
gg <- gg + geom_text(data=filter(df, country=="Germany"),
aes(x=ages_35, y=country, label="Ages 35+"),
color="#9fb059", size=3, vjust=-2, fontface="bold", family="Calibri")
gg <- gg + geom_text(data=filter(df, country=="Germany"),
aes(x=ages_18_to_34, y=country, label="Ages 18-34"),
color="#edae52", size=3, vjust=-2, fontface="bold", family="Calibri")
gg
fonts()
gg <- ggplot()
# doing this vs y axis major grid line
gg <- gg + geom_segment(data=df, aes(y=country, yend=country, x=0, xend=1), color="#b2b2b2", size=0.15)
# dum…dum…dum!bell
gg <- gg + geom_dumbbell(data=df, aes(y=country, x=ages_35, xend=ages_18_to_34),
size=1.5, color="#b2b2b2", point.size.l=3, point.size.r=3,
point.colour.l="#9fb059", point.colour.r="#edae52")
# text below points
gg <- gg + geom_text(data=filter(df, country=="Germany"),
aes(x=ages_35, y=country, label="Ages 35+"),
color="#9fb059", size=3, vjust=-2, fontface="bold", family="Arial Narrow")
gg <- gg + geom_text(data=filter(df, country=="Germany"),
aes(x=ages_18_to_34, y=country, label="Ages 18-34"),
color="#edae52", size=3, vjust=-2, fontface="bold", family="Arial Narrow")
# text above points
gg <- gg + geom_text(data=df, aes(x=ages_35, y=country, label=percent_first(ages_35)),
color="#9fb059", size=2.75, vjust=2.5, family="Arial Narrow")
gg <- gg + geom_text(data=df, color="#edae52", size=2.75, vjust=2.5, family="Arial Narrow",
aes(x=ages_18_to_34, y=country, label=percent_first(ages_18_to_34)))
# difference column
gg <- gg + geom_rect(data=df, aes(xmin=1.05, xmax=1.175, ymin=-Inf, ymax=Inf), fill="#efefe3")
gg <- gg + geom_text(data=df, aes(label=diff, y=country, x=1.1125), fontface="bold", size=3, family="Arial Narrow")
gg <- gg + geom_text(data=filter(df, country=="Germany"), aes(x=1.1125, y=country, label="DIFF"),
color="#7a7d7e", size=3.1, vjust=-2, fontface="bold", family="Arial Narrow")
gg <- gg + scale_x_continuous(expand=c(0,0), limits=c(0, 1.175))
gg <- gg + scale_y_discrete(expand=c(0.075,0))
gg <- gg + labs(x=NULL, y=NULL, title="The social media age gap",
subtitle="Adult internet users or reported smartphone owners who\nuse social networking sites",
caption="Source: Pew Research Center, Spring 2015 Global Attitudes Survey. Q74")
gg <- gg + theme_bw(base_family="Arial Narrow")
gg <- gg + theme(panel.grid.major=element_blank())
gg <- gg + theme(panel.grid.minor=element_blank())
gg <- gg + theme(panel.border=element_blank())
gg <- gg + theme(axis.ticks=element_blank())
gg <- gg + theme(axis.text.x=element_blank())
gg <- gg + theme(plot.title=element_text(face="bold"))
gg <- gg + theme(plot.subtitle=element_text(face="italic", size=9, margin=margin(b=12)))
gg <- gg + theme(plot.caption=element_text(size=7, margin=margin(t=12), color="#7a7d7e"))
gg
View(df)
gg <- ggplot()
# doing this vs y axis major grid line
gg <- gg + geom_segment(data=df, aes(y=country, yend=country, x=0, xend=1), color="#b2b2b2", size=0.15)
gg
gg <- gg + geom_dumbbell(data=df, aes(y=country, x=ages_35, xend=ages_18_to_34),
size=1.5, color="#b2b2b2", point.size.l=3, point.size.r=3,
point.colour.l="#9fb059", point.colour.r="#edae52")
gg
# text below points
gg <- gg + geom_text(data=filter(df, country=="Germany"),
aes(x=ages_35, y=country, label="Ages 35+"),
color="#9fb059", size=3, vjust=-2, fontface="bold", family="Arial Narrow")
gg <- gg + geom_text(data=filter(df, country=="Germany"),
aes(x=ages_18_to_34, y=country, label="Ages 18-34"),
color="#edae52", size=3, vjust=-2, fontface="bold", family="Arial Narrow")
gg
# text above points
gg <- gg + geom_text(data=df, aes(x=ages_35, y=country, label=percent_first(ages_35)),
color="#9fb059", size=2.75, vjust=2.5, family="Arial Narrow")
gg <- gg + geom_text(data=df, color="#edae52", size=2.75, vjust=2.5, family="Arial Narrow",
aes(x=ages_18_to_34, y=country, label=percent_first(ages_18_to_34)))
gg
# difference column
gg <- gg + geom_rect(data=df, aes(xmin=1.05, xmax=1.175, ymin=-Inf, ymax=Inf), fill="#efefe3")
gg <- gg + geom_text(data=df, aes(label=diff, y=country, x=1.1125), fontface="bold", size=3, family="Arial Narrow")
gg <- gg + geom_text(data=filter(df, country=="Germany"), aes(x=1.1125, y=country, label="DIFF"),
color="#7a7d7e", size=3.1, vjust=-2, fontface="bold", family="Arial Narrow")
gg <- gg + scale_x_continuous(expand=c(0,0), limits=c(0, 1.175))
gg <- gg + scale_y_discrete(expand=c(0.075,0))
gg <- gg + labs(x=NULL, y=NULL, title="The social media age gap",
subtitle="Adult internet users or reported smartphone owners who\nuse social networking sites",
caption="Source: Pew Research Center, Spring 2015 Global Attitudes Survey. Q74")
gg <- gg + theme_bw(base_family="Arial Narrow")
gg <- gg + theme(panel.grid.major=element_blank())
gg <- gg + theme(panel.grid.minor=element_blank())
gg <- gg + theme(panel.border=element_blank())
gg <- gg + theme(axis.ticks=element_blank())
gg <- gg + theme(axis.text.x=element_blank())
gg <- gg + theme(plot.title=element_text(face="bold"))
gg <- gg + theme(plot.subtitle=element_text(face="italic", size=9, margin=margin(b=12)))
gg <- gg + theme(plot.caption=element_text(size=7, margin=margin(t=12), color="#7a7d7e"))
gg
myMap <- get_map(location=myLocation, source="stamen", maptype=“watercolor", crop=FALSE) ggmap(myMap)
library(ggmap)
library(ggplot2)
myMap <- get_map(location=myLocation, source="stamen", maptype=“watercolor", crop=FALSE) ggmap(myMap)
myMap <- get_map(location=myLocation, source="stamen", maptype=“watercolor", crop=FALSE)
myMap <- get_map(location=myLocation, source="stamen", maptype="watercolor", crop=FALSE)
myLocation <- "University of Washington”
myMap <- get_map(location=myLocation, source="stamen", maptype="watercolor", crop=FALSE)
myLocation <- "University of Washington"
myMap <- get_map(location=myLocation, source="stamen", maptype="watercolor", crop=FALSE)
ggmap(myMap)
devtools::install_github('slowkow/ggrepel')
devtools::install_github("slowkow/ggrepel")
ibrary(data.table)
library(plyr)
library(dplyr)
library(locfit)
library(grid)
library(gridExtra)
devtools::install_github("slowkow/ggrepel")
library(devtools)
devtools::install_github("slowkow/ggrepel")
library(devtools) install_github("hadley/ggplot2@v2.2.0")
library(devtools)
devtools::install_github("hadley/ggplot2@v2.2.0")
library(ggplot2)
myLocation <- "University of Washington"
myMap <- get_map(location=myLocation, source="stamen", maptype="watercolor", crop=FALSE)
ggmap(myMap)+
geom_point(aes(x = Longitude, y = Latitude), data = data,
alpha = .5, color="darkred", size = 3)
ggmap(myMap)
devtools::install_github('hadley/ggplot2')
devtools::install_github('thomasp85/ggforce')
devtools::install_github('thomasp85/ggraph')
install.packages("ggmap", type = "source")
install.packages("ggmap", type = "source")
library(ggmap)
library(devtools)
library(ggplot2)
myLocation <- "University of Washington"
myMap <- get_map(location=myLocation, source="stamen", maptype="watercolor", crop=FALSE)
ggmap(myMap)
source('~/.active-rstudio-document', echo=TRUE)
summaru(fm1)
summary(fm1)
library(devtools)
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()
library(IRkernel)
IRkernel::installspec()
IRkernel::installspec()
IRkernel::installspec()
install.packages(jsonlite)
install.packages("jsonlite")
library(jsonlite)
rsinfo <- fromJSON(txt = http://saleiva.cartodb.com/api/v2/sql?q=select%20cdb_id,%20tour_length,%20shortname,%20year,%20description%20from%20rolling_stones_tours%20order%20by%20first_concert_date%20asc)
fromJSON(file=http://saleiva.cartodb.com/api/v2/sql?q=select%20cdb_id,%20tour_length,%20shortname,%20year,%20description%20from%20rolling_stones_tours%20order%20by%20first_concert_date%20asc)
url=http://saleiva.cartodb.com/api/v2/sql?q=select%20cdb_id,%20tour_length,%20shortname,%20year,%20description%20from%20rolling_stones_tours%20order%20by%20first_concert_date%20asc
rsinfo <- fromJSON(txt = 'http://saleiva.cartodb.com/api/v2/sql?q=select%20cdb_id,%20tour_length,%20shortname,%20year,%20description%20from%20rolling_stones_tours%20order%20by%20first_concert_date%20asc')
rbind(rsindo)
rbind(rsinfo)
library(data.table)
rbindlist(rsinfo)
as.data.table(rsinfo)
test[, rsinfo := gsub("'", "\"", rsinfo)]
test <- data.table(a = list(1,2,3),
info = list("{'duration': '10', 'country': 'US'}",
"{'duration': '20', 'country': 'US'}",
"{'duration': '30', 'country': 'GB', 'width': '20'}"))
View(test)
View(test)
rsinfo
test[, rbindlist(lapply(rsinfo, fromJSON), use.names = TRUE, fill = TRUE)]
files.wd    = '/Users/MEAS/GitHub/nuclear-map'
setwd(files.wd)
nuc.file        = 'nucgenlist.csv'
plants.file     = 'allplants.csv'
library(data.table)
nuclist = fread(nuc.file, header = TRUE)
View(nuclist)
nuclist[, c(plant_code, nameplate_capacity, status, operating_year, retirement_year), with = FALSE]
nuclist[, c("plant_code", "nameplate_capacity", "status", "operating_year", "retirement_year"), with = FALSE]
nuclist = nuclist[, c("plant_code", "nameplate_capacity", "status", "operating_year", "retirement_year"), with = FALSE]
View(nuclist)
nuclist = nuclist[, plant_capacity := sum(nameplate_capacity), by = plant_code]
View(nuclist)
nucplants = subset(unique(nuclist), select = -nameplate_capacity)
View(nucplants)
nuclist = nuclist[, c("plant_code", "plant_code"), with = FALSE]
View(nuclist)
nuclist = fread(nuc.file, header = TRUE)
nuclist = nuclist[, c("plant_code", "nameplate_capacity", "status", "operating_year", "retirement_year"), with = FALSE]
nuclist = nuclist[, plant_capacity := sum(nameplate_capacity), by = plant_code]
nuclist = nuclist[, c("plant_code", "plant_capacity"), with = FALSE]
View(nuclist)
nuclist = unique(nuclist)
View(nuclist)
nuclist = fread(nuc.file, header = TRUE)
nuclist = nuclist[, c("plant_code", "nameplate_capacity", "status", "operating_year", "retirement_year"), with = FALSE]
nuclist = nuclist[, plant_capacity := sum(nameplate_capacity), by = plant_code]
nuclist = nuclist[, c("plant_code", "plant_capacity"), with = FALSE]
nucplants = unique(nuclist)
View(nuclist)
nlevels(factor(nuclist$plant_code))
View(nuclist)
nucplants = na.omit(unique(nuclist))
View(nucplants)
plantlist = fread(plants.file, header = TRUE)
nucplants = nucplants[plantlist, on = "plant_code", no.match = 0]
nucplants = nucplants[plantlist, on = "plant_code", nomatch = 0]
View(nucplants)
write.csv(nucplants, "nucplantlist.csv", row.names = FALSE)
rm(list=ls())
files.wd        = '/Users/MEAS/GitHub/nuclear-map'
nuc.file        = 'nucgenlist.csv'
plants.file     = 'allplants.csv'
library(data.table)
setwd(files.wd)
nuclist = fread(nuc.file, header = TRUE)
nuclist = nuclist[, c("plant_code", "nameplate_capacity", "status", "operating_year", "retirement_year"), with = FALSE]
nuclist = nuclist[, plant_capacity := sum(nameplate_capacity), by = plant_code]
nuclist = nuclist[, c("plant_code", "plant_capacity", "operating_year", "retirement_year"), with = FALSE]
nucplants = na.omit(unique(nuclist))
plantlist = fread(plants.file, header = TRUE)
nucplants = nucplants[plantlist, on = "plant_code", nomatch = 0]
View(nucplants)
View(nuclist)
nuclist = fread(nuc.file, header = TRUE)
nuclist = nuclist[, c("plant_code", "nameplate_capacity", "status", "operating_year", "retirement_year"), with = FALSE]
nuclist = nuclist[, plant_capacity := sum(nameplate_capacity), by = plant_code]
nuclist = nuclist[, c("plant_code", "plant_capacity", "operating_year", "retirement_year"), with = FALSE]
nucplants = unique(nuclist)
View(nucplants)
nucplants = nucplants[ !(plant_code == "NA") ]
View(nucplants)
View(nuclist)
nuclist = fread(nuc.file, header = TRUE)
nuclist = nuclist[, c("plant_code", "nameplate_capacity", "status", "operating_year", "retirement_year"), with = FALSE]
nuclist = nuclist[, plant_capacity := sum(nameplate_capacity), by = plant_code]
nuclist = nuclist[, operating_year := min(operating_year), by = plant_code]
View(nuclist)
nuclist = nuclist[, retirement_year := min(retirement_year), by = plant_code]
nuclist = nuclist[, c("plant_code", "plant_capacity", "operating_year", "retirement_year"), with = FALSE]
nucplants = unique(nuclist)
nucplants = nucplants[ !(plant_code == "NA") ]
plantlist = fread(plants.file, header = TRUE)
nucplants = nucplants[plantlist, on = "plant_code", nomatch = 0]
View(nuclist)
View(nucplants)
write.csv(nucplants, "nucplantlist.csv", row.names = FALSE)
files.wd        = '/Users/MEAS/GitHub/nuclear-map'
nuc.file        = 'nucgenlist.csv'
plants.file     = 'allplants.csv'
library(data.table)
setwd(files.wd)
nuclist = fread(nuc.file, header = TRUE)
nuclist = nuclist[, c("plant_code", "nameplate_capacity", "status", "operating_year", "retirement_year"), with = FALSE]
nuclist = nuclist[, plant_capacity := sum(nameplate_capacity), by = plant_code]
nuclist = nuclist[, operating_year := min(operating_year), by = plant_code]
nuclist = nuclist[, retirement_year := min(retirement_year), by = plant_code]
nuclist = nuclist[, c("plant_code", "plant_capacity", "operating_year", "retirement_year"), with = FALSE]
nucplants = unique(nuclist)
nucplants = nucplants[ !(plant_code == "NA") ]
plantlist = fread(plants.file, header = TRUE)
nucplants = nucplants[plantlist, on = "plant_code", nomatch = 0]
files.wd        = '/Users/MEAS/GitHub/nuclear-map'
nuc.file        = 'nucgenlist.csv'
plants.file     = 'allplants.csv'
library(data.table)
setwd(files.wd)
nuclist = fread(nuc.file, header = TRUE)
nuclist = nuclist[, c("plant_code", "nameplate_capacity", "status", "operating_year", "retirement_year"), with = FALSE]
nuclist = nuclist[, plant_capacity := sum(nameplate_capacity), by = plant_code]
nuclist = nuclist[, operating_year := min(operating_year), by = plant_code]
nuclist = nuclist[, retirement_year := min(retirement_year), by = plant_code]
nuclist = nuclist[, c("plant_code", "plant_capacity", "operating_year", "retirement_year"), with = FALSE]
nucplants = unique(nuclist)
nucplants = nucplants[ !(plant_code == "NA") ]
plantlist = fread(plants.file, header = TRUE)
nucplants = nucplants[plantlist, on = "plant_code", nomatch = 0]
files.wd        = '/Users/MEAS/GitHub/nuclear-map'
nuc.file        = 'nucgenlist.csv'
plants.file     = 'allplants.csv'
library(data.table)
setwd(files.wd)
nuclist = fread(nuc.file, header = TRUE)
nuclist = nuclist[, c("plant_code", "nameplate_capacity", "status", "operating_year", "retirement_year"), with = FALSE]
nuclist = nuclist[, plant_capacity := sum(nameplate_capacity), by = plant_code]
nuclist = nuclist[, operating_year := min(operating_year), by = plant_code]
nuclist = nuclist[, retirement_year := min(retirement_year), by = plant_code]
nuclist = nuclist[, c("plant_code", "plant_capacity", "operating_year", "retirement_year"), with = FALSE]
nucplants = unique(nuclist)
nucplants = nucplants[ !(plant_code == "NA") ]
plantlist = fread(plants.file, header = TRUE)
nucplants = nucplants[plantlist, on = "plant_code", nomatch = 0]
files.wd        = '/Users/MEAS/GitHub/nuclear-map/data'
nuc.file        = 'nucgenlist.csv'
plants.file     = 'allplants.csv'
library(data.table)
setwd(files.wd)
nuclist = fread(nuc.file, header = TRUE)
nuclist = nuclist[, c("plant_code", "nameplate_capacity", "status", "operating_year", "retirement_year"), with = FALSE]
nuclist = nuclist[, plant_capacity := sum(nameplate_capacity), by = plant_code]
nuclist = nuclist[, operating_year := min(operating_year), by = plant_code]
nuclist = nuclist[, retirement_year := min(retirement_year), by = plant_code]
nuclist = nuclist[, c("plant_code", "plant_capacity", "operating_year", "retirement_year"), with = FALSE]
nucplants = unique(nuclist)
nucplants = nucplants[ !(plant_code == "NA") ]
plantlist = fread(plants.file, header = TRUE)
nucplants = nucplants[plantlist, on = "plant_code", nomatch = 0]
View(nucplants)
table(nucplants$operating_year)
t(table(nucplants$operating_year))
ncount=as.data.table(t(table(nucplants$operating_year)))
View(ncount)
fwrite(ncount, "ncount.csv", row.names=F)
read.csv(ncount, "ncount.csv", row.names=F)
write.csv(ncount, "ncount.csv", row.names = F)
files.wd        = '/Users/MEAS/GitHub/nuclear-map/data'
nuc.file        = 'nucgenlist.csv'
plants.file     = 'allplants.csv'
library(data.table)
setwd(files.wd)
nuclist = fread(nuc.file, header = TRUE)
nuclist = nuclist[, c("plant_code", "nameplate_capacity", "status", "operating_year", "retirement_year"), with = FALSE]
nuclist = nuclist[, plant_capacity := sum(nameplate_capacity), by = plant_code]
nuclist = nuclist[, operating_year := min(operating_year), by = plant_code]
nuclist = nuclist[, retirement_year := min(retirement_year), by = plant_code]
nuclist = nuclist[, c("plant_code", "plant_capacity", "operating_year", "retirement_year"), with = FALSE]
nucplants = unique(nuclist)
nucplants = nucplants[ !(plant_code == "NA") ]
plantlist = fread(plants.file, header = TRUE)
nucplants = nucplants[plantlist, on = "plant_code", nomatch = 0]
View(nuclist)
View(nucplants)
write.csv(nucplants, "nucplantlist.csv", row.names = FALSE)
